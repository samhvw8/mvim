

n  <CR>        *@:call startify#open_buffers()<CR>
n  <Space>hp    @<Plug>(GitGutterPreviewHunk)
n  <Space>hu    @<Plug>(GitGutterUndoHunk)
n  <Space>hs    @<Plug>(GitGutterStageHunk)
x  <Space>hs    @<Plug>(GitGutterStageHunk)
n  0           *@:call startify#open_buffers(19)<CR>
n  10          *@:call startify#open_buffers(32)<CR>
n  1           *@:call startify#open_buffers(20)<CR>
n  2           *@:call startify#open_buffers(21)<CR>
n  3           *@:call startify#open_buffers(22)<CR>
n  4           *@:call startify#open_buffers(23)<CR>
n  5           *@:call startify#open_buffers(24)<CR>
n  6           *@:call startify#open_buffers(25)<CR>
n  7           *@:call startify#open_buffers(26)<CR>
n  8           *@:call startify#open_buffers(27)<CR>
n  9           *@:call startify#open_buffers(28)<CR>
n  B           *@:call startify#set_batchmode('B')<CR>
n  N           *@'j '[v:searchforward].'N'
n  S           *@:call startify#set_batchmode('S')<CR>
n  T           *@:call startify#set_batchmode('T')<CR>
n  V           *@:call startify#set_batchmode('V')<CR>
x  ac           @<Plug>(GitGutterTextObjectOuterVisual)
o  ac           @<Plug>(GitGutterTextObjectOuterPending)
n  b           *@:call startify#set_mark('B')<CR>
n  e           *@:call startify#open_buffers(15)<CR>
n  i           *@:enew | startinsert<CR>
x  ic           @<Plug>(GitGutterTextObjectInnerVisual)
o  ic           @<Plug>(GitGutterTextObjectInnerPending)
n  n           *@' j'[v:searchforward].'n'
n  q           *@:call startify#open_buffers(34)<CR>
n  s           *@:call startify#set_mark('S')<CR>
n  t           *@:call startify#set_mark('T')<CR>
n  v           *@:call startify#set_mark('V')<CR>
n  <MiddleMouse> *@:enew | execute 'normal! "'.(v:register=='"'?'*':v:register).'gp'<CR>
n  <2-LeftMouse> *@:call startify#open_buffers()<CR>
n  <LeftMouse> *@:call <SNR>128_leftmouse()<CR>
n  <Insert>    *@:enew | startinsert<CR>
x  <C-A>         <Plug>SpeedDatingUp
n  <C-A>         <Plug>SpeedDatingUp
n  <C-B>         :Denite buffer<CR>
   <C-H>         <C-W>h
x  <Tab>         <Plug>(coc-range-select)
n  <Tab>         <Plug>(coc-range-select)
   <NL>          <C-W>j
   <C-K>         <C-W>k
   <C-L>         <C-W>l
n  <C-N>         <Plug>yankstack_substitute_newer_paste
n  <C-P>         <Plug>yankstack_substitute_older_paste
x  <C-S>       * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  <C-S>       * :call multiple_cursors#new("n", 1)<CR>
n  <C-W><C-F>  * :call GotoFile("new")<CR>
n  <C-W>f      * :call GotoFile("new")<CR>
x  <C-X>         <Plug>SpeedDatingDown
n  <C-X>         <Plug>SpeedDatingDown
n  <Space>bv   & :BufExplorerVerticalSplit<CR>
n  <Space>bs   & :BufExplorerHorizontalSplit<CR>
n  <Space>bt   & :ToggleBufExplorer<CR>
n  <Space>m    * :UndotreeToggle<CR>
n  <Space><Space>a   <Plug>(ale_next_wrap)
n  <Space>z    * :Goyo<CR>
   <Space>nf     :NERDTreeFind<CR>
   <Space>nb     :NERDTreeFromBookmark<Space>
   <Space>nn     :NERDTreeToggle<CR>
n  <Space>j      :Denite -start-filter file/rec<CR>
   <Space>o      :BufExplorer<CR>
n  <Space>qf     <Plug>(coc-fix-current)
n  <Space>a      <Plug>(coc-codeaction-selected)
x  <Space>a      <Plug>(coc-codeaction-selected)
n  <Space>f      <Plug>(coc-format-selected)
x  <Space>f      <Plug>(coc-format-selected)
   <Space>n      :cn<CR>
   <Space>co     ggVGy:tabnew<CR>:set syntax=qf<CR>pgg
   <Space>cc     :botright cope<CR>
   <Space>pp     :setlocal paste!<CR>
   <Space>xo     :e ~/buffer.org<CR>
   <Space>xm     :e ~/buffer.md<CR>
   <Space>xn     :e ~/buffer<CR>
   <Space>P    * "+p
   <Space>Y    * "+y
   <Space>p      :cp<CR>
   <Space>y    * "*y
   <Space>cd     :cd %:p:h<CR>:pwd<CR>
   <Space>te     :tabedit <C-R>=expand("%:p:h")<CR>/
n  <Space>tl     :exe "tabn ".g:lasttab<CR>
   <Space>t<Space>   :tabnext <CR>
   <Space>tm     :tabmove<CR>
   <Space>tc     :tabclose<CR>
   <Space>to     :tabonly<CR>
   <Space>tn     :tabnew<CR>
   <Space>h      :bprevious<CR>
   <Space>l      :bnext<CR>
   <Space>ba     :bufdo bd<CR>
   <Space>bd     :Bclose<CR>:tabclose<CR>gT
   <Space><CR>   :noh<CR>
v  $e          * <Esc>`>a"<Esc>`<i"<Esc>
v  $q          * <Esc>`>a'<Esc>`<i'<Esc>
v  $$          * <Esc>`>a"<Esc>`<i"<Esc>
v  $3          * <Esc>`>a}<Esc>`<i{<Esc>
v  $2          * <Esc>`>a]<Esc>`<i[<Esc>
v  $1          * <Esc>`>a)<Esc>`<i(<Esc>
o  %           * v:<C-U>call <SNR>68_Match_wrapper('',1,'o') <CR>
v  %           * :<C-U>call <SNR>68_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>68_Match_wrapper('',1,'n') <CR>
v  +             <Plug>(expand_region_expand)
n  +             <Plug>(expand_region_expand)
s  0             <SNR>27_yank_with_key("0")
nox0             ^
s  1             <SNR>27_yank_with_key("1")
s  2             <SNR>27_yank_with_key("2")
s  3             <SNR>27_yank_with_key("3")
s  4             <SNR>27_yank_with_key("4")
s  5             <SNR>27_yank_with_key("5")
s  6             <SNR>27_yank_with_key("6")
s  7             <SNR>27_yank_with_key("7")
s  8             <SNR>27_yank_with_key("8")
s  9             <SNR>27_yank_with_key("9")
n  <p          & :<C-U>call <SNR>23_putline(v:count1 . ']p', 'Below')<CR><']
n  <P          & :<C-U>call <SNR>23_putline(v:count1 . '[p', 'Above')<CR><']
n  =p          & :<C-U>call <SNR>23_putline(v:count1 . ']p', 'Below')<CR>=']
n  =P          & :<C-U>call <SNR>23_putline(v:count1 . '[p', 'Above')<CR>=']
n  =op         * <Nop>
n  =o            <SNR>23_legacy_option_map(nr2char(getchar()))
n  >p          & :<C-U>call <SNR>23_putline(v:count1 . ']p', 'Below')<CR>>']
n  >P          & :<C-U>call <SNR>23_putline(v:count1 . '[p', 'Above')<CR>>']
x  @(targets)  * :<C-U>call targets#do()<CR>
o  @(targets)  * :<C-U>call targets#do()<CR>
x  A             targets#e('o', 'A', 'A')
o  A             targets#e('o', 'A', 'A')
x  I             targets#e('o', 'I', 'I')
o  I             targets#e('o', 'I', 'I')
n  K           * :call <SNR>10_show_documentation()<CR>
x  P           * :<C-U>call <SNR>27_paste_with_key("P", "v", v:register, v:count1)<CR>
n  P           * :<C-U>call <SNR>27_paste_with_key("P", "n", v:register, v:count1)<CR>
x  S             <Plug>VSurround
v  Si            S(i_<Esc>f)
o  [%          * v:<C-U>call <SNR>68_MultiMatch("bW", "o") <CR>
v  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>68_MultiMatch("bW", "n") <CR>
n  [xx           <Plug>unimpaired_line_xml_encode
x  [x            <Plug>unimpaired_xml_encode
n  [x            <Plug>unimpaired_xml_encode
n  [uu           <Plug>unimpaired_line_url_encode
x  [u            <Plug>unimpaired_url_encode
n  [u            <Plug>unimpaired_url_encode
n  [yy           <Plug>unimpaired_line_string_encode
x  [y            <Plug>unimpaired_string_encode
n  [y            <Plug>unimpaired_string_encode
n  [P            <Plug>unimpairedPutAbove
n  [p            <Plug>unimpairedPutAbove
n  [op         & :call <SNR>23_setup_paste()<CR>O
n  [o+         & :set cursorline cursorcolumn<CR>
n  [ox         & :set cursorline cursorcolumn<CR>
n  [ov         & :set virtualedit+=all<CR>
n  [ow         & :setlocal wrap<C-R>=<SNR>23_statusbump()<CR><CR>
n  [os         & :setlocal spell<C-R>=<SNR>23_statusbump()<CR><CR>
n  [or         & :setlocal relativenumber<C-R>=<SNR>23_statusbump()<CR><CR>
n  [on         & :setlocal number<C-R>=<SNR>23_statusbump()<CR><CR>
n  [ol         & :setlocal list<C-R>=<SNR>23_statusbump()<CR><CR>
n  [oi         & :set ignorecase<C-R>=<SNR>23_statusbump()<CR><CR>
n  [oh         & :set hlsearch<C-R>=<SNR>23_statusbump()<CR><CR>
n  [od         & :diffthis<CR>
n  [o|         & :setlocal cursorcolumn<C-R>=<SNR>23_statusbump()<CR><CR>
n  [ou         & :setlocal cursorcolumn<C-R>=<SNR>23_statusbump()<CR><CR>
n  [o_         & :setlocal cursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  [o-         & :setlocal cursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  [oc         & :setlocal cursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  [ob         & :set background=light<CR>
x  [e            <Plug>unimpairedMoveSelectionUp
n  [e            <Plug>unimpairedMoveUp
n  [<Space>      <Plug>unimpairedBlankUp
o  [n            <Plug>unimpairedContextPrevious
x  [n            <Plug>unimpairedContextPrevious
n  [n            <Plug>unimpairedContextPrevious
n  [f            <Plug>unimpairedDirectoryPrevious
n  [<C-T>        <Plug>unimpairedTPPrevious
n  [T            <Plug>unimpairedTFirst
n  [t            <Plug>unimpairedTPrevious
n  [<C-Q>        <Plug>unimpairedQPFile
n  [Q            <Plug>unimpairedQFirst
n  [q            <Plug>unimpairedQPrevious
n  [<C-L>        <Plug>unimpairedLPFile
n  [L            <Plug>unimpairedLFirst
n  [l            <Plug>unimpairedLPrevious
n  [B            <Plug>unimpairedBFirst
n  [b            <Plug>unimpairedBPrevious
n  [A            <Plug>unimpairedAFirst
n  [a            <Plug>unimpairedAPrevious
n  [h            <Plug>(GitGutterPrevHunk)
n  [g            <Plug>(coc-diagnostic-prev)
n  \           * :Denite grep<CR>
o  ]%          * v:<C-U>call <SNR>68_MultiMatch("W",  "o") <CR>
v  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>68_MultiMatch("W",  "n") <CR>
n  ]xx           <Plug>unimpaired_line_xml_decode
x  ]x            <Plug>unimpaired_xml_decode
n  ]x            <Plug>unimpaired_xml_decode
n  ]uu           <Plug>unimpaired_line_url_decode
x  ]u            <Plug>unimpaired_url_decode
n  ]u            <Plug>unimpaired_url_decode
n  ]yy           <Plug>unimpaired_line_string_decode
x  ]y            <Plug>unimpaired_string_decode
n  ]y            <Plug>unimpaired_string_decode
n  ]P            <Plug>unimpairedPutBelow
n  ]p            <Plug>unimpairedPutBelow
n  ]op         & :call <SNR>23_setup_paste()<CR>o
n  ]o+         & :set nocursorline nocursorcolumn<CR>
n  ]ox         & :set nocursorline nocursorcolumn<CR>
n  ]ov         & :set virtualedit-=all<CR>
n  ]ow         & :setlocal nowrap<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]os         & :setlocal nospell<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]or         & :setlocal norelativenumber<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]on         & :setlocal nonumber<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]ol         & :setlocal nolist<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]oi         & :set noignorecase<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]oh         & :set nohlsearch<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]od         & :diffoff<CR>
n  ]o|         & :setlocal nocursorcolumn<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]ou         & :setlocal nocursorcolumn<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]o_         & :setlocal nocursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]o-         & :setlocal nocursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]oc         & :setlocal nocursorline<C-R>=<SNR>23_statusbump()<CR><CR>
n  ]ob         & :set background=dark<CR>
x  ]e            <Plug>unimpairedMoveSelectionDown
n  ]e            <Plug>unimpairedMoveDown
n  ]<Space>      <Plug>unimpairedBlankDown
o  ]n            <Plug>unimpairedContextNext
x  ]n            <Plug>unimpairedContextNext
n  ]n            <Plug>unimpairedContextNext
n  ]f            <Plug>unimpairedDirectoryNext
n  ]<C-T>        <Plug>unimpairedTPNext
n  ]T            <Plug>unimpairedTLast
n  ]t            <Plug>unimpairedTNext
n  ]<C-Q>        <Plug>unimpairedQNFile
n  ]Q            <Plug>unimpairedQLast
n  ]q            <Plug>unimpairedQNext
n  ]<C-L>        <Plug>unimpairedLNFile
n  ]L            <Plug>unimpairedLLast
n  ]l            <Plug>unimpairedLNext
n  ]B            <Plug>unimpairedBLast
n  ]b            <Plug>unimpairedBNext
n  ]A            <Plug>unimpairedALast
n  ]a            <Plug>unimpairedANext
n  ]h            <Plug>(GitGutterNextHunk)
n  ]g            <Plug>(coc-diagnostic-next)
n  _             <Plug>(expand_region_shrink)
v  _             <Plug>(expand_region_shrink)
o  ai          * :<C-U>cal <SNR>72_HandleTextObjectMapping(0, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
v  ai          * :<C-U>cal <SNR>72_HandleTextObjectMapping(0, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  aI          * :<C-U>cal <SNR>72_HandleTextObjectMapping(0, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
v  aI          * :<C-U>cal <SNR>72_HandleTextObjectMapping(0, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
x  a             targets#e('o', 'a', 'a')
o  a             targets#e('o', 'a', 'a')
v  a%            <Esc>[%v]%
s  a             <SNR>27_yank_with_key("a")
o  af            <Plug>(coc-funcobj-a)
x  af            <Plug>(coc-funcobj-a)
s  b             <SNR>27_yank_with_key("b")
s  c             <SNR>27_yank_with_key("c")
n  cop         * <Nop>
n  co            <SNR>23_legacy_option_map(nr2char(getchar()))
n  cr            <Plug>(abolish-coerce-word)
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
s  d             <SNR>27_yank_with_key("d")
x  d           * <SNR>27_yank_with_key("d")
n  d           * <SNR>27_yank_with_key("d")
n  d<C-X>        <Plug>SpeedDatingNowLocal
n  d<C-A>        <Plug>SpeedDatingNowUTC
n  ds            <Plug>Dsurround
s  e             <SNR>27_yank_with_key("e")
s  f             <SNR>27_yank_with_key("f")
v  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
x  g<M-s>      * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  g<M-s>      * :call multiple_cursors#select_all("n", 0)<CR>
x  g<C-S>      * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  g<C-S>      * :call multiple_cursors#new("n", 0)<CR>
o  g%          * v:<C-U>call <SNR>68_Match_wrapper('',0,'o') <CR>
v  g%          * :<C-U>call <SNR>68_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>68_Match_wrapper('',0,'n') <CR>
n  gf          * :call GotoFile("")<CR>
s  g             <SNR>27_yank_with_key("g")
x  gP          * :<C-U>call <SNR>27_paste_with_key("gP", "v", v:register, v:count1)<CR>
n  gP          * :<C-U>call <SNR>27_paste_with_key("gP", "n", v:register, v:count1)<CR>
x  gp          * :<C-U>call <SNR>27_paste_with_key("gp", "v", v:register, v:count1)<CR>
n  gp          * :<C-U>call <SNR>27_paste_with_key("gp", "n", v:register, v:count1)<CR>
n  gcu           <Plug>Commentary<Plug>Commentary
n  gcc           <Plug>CommentaryLine
o  gc            <Plug>Commentary
n  gc            <Plug>Commentary
x  gc            <Plug>Commentary
x  gS            <Plug>VgSurround
n  ga            <Plug>(EasyAlign)
x  ga            <Plug>(EasyAlign)
n  gr            <Plug>(coc-references)
n  gi            <Plug>(coc-implementation)
n  gy            <Plug>(coc-type-definition)
n  gd            <Plug>(coc-definition)
s  h             <SNR>27_yank_with_key("h")
o  ii          * :<C-U>cal <SNR>72_HandleTextObjectMapping(1, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
v  ii          * :<C-U>cal <SNR>72_HandleTextObjectMapping(1, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  iI          * :<C-U>cal <SNR>72_HandleTextObjectMapping(1, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
v  iI          * :<C-U>cal <SNR>72_HandleTextObjectMapping(1, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
x  i             targets#e('o', 'i', 'i')
o  i             targets#e('o', 'i', 'i')
s  i             <SNR>27_yank_with_key("i")
o  if            <Plug>(coc-funcobj-i)
x  if            <Plug>(coc-funcobj-i)
s  j             <SNR>27_yank_with_key("j")
s  k             <SNR>27_yank_with_key("k")
s  l             <SNR>27_yank_with_key("l")
s  m             <SNR>27_yank_with_key("m")
s  n             <SNR>27_yank_with_key("n")
s  o             <SNR>27_yank_with_key("o")
s  p             <SNR>27_yank_with_key("p")
x  p           * :<C-U>call <SNR>27_paste_with_key("p", "v", v:register, v:count1)<CR>
n  p           * :<C-U>call <SNR>27_paste_with_key("p", "n", v:register, v:count1)<CR>
s  q             <SNR>27_yank_with_key("q")
s  r             <SNR>27_yank_with_key("r")
s  s             <SNR>27_yank_with_key("s")
s  t             <SNR>27_yank_with_key("t")
s  u             <SNR>27_yank_with_key("u")
s  v             <SNR>27_yank_with_key("v")
s  w             <SNR>27_yank_with_key("w")
s  x             <SNR>27_yank_with_key("x")
s  y             <SNR>27_yank_with_key("y")
x  y           * <SNR>27_yank_with_key("y")
n  y           * <SNR>27_yank_with_key("y")
n  yop         & :call <SNR>23_setup_paste()<CR>0C
n  yo+         & :set <C-R>=<SNR>23_cursor_options()<CR><CR>
n  yox         & :set <C-R>=<SNR>23_cursor_options()<CR><CR>
n  yov         & :set <C-R>=(&virtualedit =~# "all") ? "virtualedit-=all" : "virtualedit+=all"<CR><CR>
n  yow         & :setlocal <C-R>=<SNR>23_toggle("wrap")<CR><CR>
n  yos         & :setlocal <C-R>=<SNR>23_toggle("spell")<CR><CR>
n  yor         & :setlocal <C-R>=<SNR>23_toggle("relativenumber")<CR><CR>
n  yon         & :setlocal <C-R>=<SNR>23_toggle("number")<CR><CR>
n  yol         & :setlocal <C-R>=<SNR>23_toggle("list")<CR><CR>
n  yoi         & :set <C-R>=<SNR>23_toggle("ignorecase")<CR><CR>
n  yoh         & :set <C-R>=<SNR>23_toggle("hlsearch")<CR><CR>
n  yod         & :<C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>
n  yo|         & :setlocal <C-R>=<SNR>23_toggle("cursorcolumn")<CR><CR>
n  you         & :setlocal <C-R>=<SNR>23_toggle("cursorcolumn")<CR><CR>
n  yo_         & :setlocal <C-R>=<SNR>23_toggle("cursorline")<CR><CR>
n  yo-         & :setlocal <C-R>=<SNR>23_toggle("cursorline")<CR><CR>
n  yoc         & :setlocal <C-R>=<SNR>23_toggle("cursorline")<CR><CR>
n  yob         & :set background=<C-R>=&background == "dark" ? "light" : "dark"<CR><CR>
n  y<C-G>      & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
s  z             <SNR>27_yank_with_key("z")
   <Plug>AirlineSelectNextTab * :<C-U>call <SNR>120_jump_to_tab(v:count1)<CR>
   <Plug>AirlineSelectPrevTab * :<C-U>call <SNR>120_jump_to_tab(-v:count1)<CR>
   <Plug>AirlineSelectTab9 * :call <SNR>120_select_tab(8)<CR>
   <Plug>AirlineSelectTab8 * :call <SNR>120_select_tab(7)<CR>
   <Plug>AirlineSelectTab7 * :call <SNR>120_select_tab(6)<CR>
   <Plug>AirlineSelectTab6 * :call <SNR>120_select_tab(5)<CR>
   <Plug>AirlineSelectTab5 * :call <SNR>120_select_tab(4)<CR>
   <Plug>AirlineSelectTab4 * :call <SNR>120_select_tab(3)<CR>
   <Plug>AirlineSelectTab3 * :call <SNR>120_select_tab(2)<CR>
   <Plug>AirlineSelectTab2 * :call <SNR>120_select_tab(1)<CR>
   <Plug>AirlineSelectTab1 * :call <SNR>120_select_tab(0)<CR>
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())<CR>
n  <Plug>(ale_rename) * :ALERename<CR>
n  <Plug>(ale_documentation) * :ALEDocumentation<CR>
n  <Plug>(ale_hover) * :ALEHover<CR>
n  <Plug>(ale_find_references) * :ALEFindReferences<CR>
n  <Plug>(ale_go_to_type_definition_in_vsplit) * :ALEGoToTypeDefinitionInVSplit<CR>
n  <Plug>(ale_go_to_type_definition_in_split) * :ALEGoToTypeDefinitionInSplit<CR>
n  <Plug>(ale_go_to_type_definition_in_tab) * :ALEGoToTypeDefinitionInTab<CR>
n  <Plug>(ale_go_to_type_definition) * :ALEGoToTypeDefinition<CR>
n  <Plug>(ale_go_to_definition_in_vsplit) * :ALEGoToDefinitionInVSplit<CR>
n  <Plug>(ale_go_to_definition_in_split) * :ALEGoToDefinitionInSplit<CR>
n  <Plug>(ale_go_to_definition_in_tab) * :ALEGoToDefinitionInTab<CR>
n  <Plug>(ale_go_to_definition) * :ALEGoToDefinition<CR>
n  <Plug>(ale_fix) * :ALEFix<CR>
n  <Plug>(ale_detail) * :ALEDetail<CR>
n  <Plug>(ale_lint) * :ALELint<CR>
n  <Plug>(ale_reset_buffer) * :ALEResetBuffer<CR>
n  <Plug>(ale_disable_buffer) * :ALEDisableBuffer<CR>
n  <Plug>(ale_enable_buffer) * :ALEEnableBuffer<CR>
n  <Plug>(ale_toggle_buffer) * :ALEToggleBuffer<CR>
n  <Plug>(ale_reset) * :ALEReset<CR>
n  <Plug>(ale_disable) * :ALEDisable<CR>
n  <Plug>(ale_enable) * :ALEEnable<CR>
n  <Plug>(ale_toggle) * :ALEToggle<CR>
n  <Plug>(ale_last) * :ALELast<CR>
n  <Plug>(ale_first) * :ALEFirst<CR>
n  <Plug>(ale_next_wrap_warning) * :ALENext -wrap -warning<CR>
n  <Plug>(ale_next_warning) * :ALENext -warning<CR>
n  <Plug>(ale_next_wrap_error) * :ALENext -wrap -error<CR>
n  <Plug>(ale_next_error) * :ALENext -error<CR>
n  <Plug>(ale_next_wrap) * :ALENextWrap<CR>
n  <Plug>(ale_next) * :ALENext<CR>
n  <Plug>(ale_previous_wrap_warning) * :ALEPrevious -wrap -warning<CR>
n  <Plug>(ale_previous_warning) * :ALEPrevious -warning<CR>
n  <Plug>(ale_previous_wrap_error) * :ALEPrevious -wrap -error<CR>
n  <Plug>(ale_previous_error) * :ALEPrevious -error<CR>
n  <Plug>(ale_previous_wrap) * :ALEPreviousWrap<CR>
n  <Plug>(ale_previous) * :ALEPrevious<CR>
o  <Plug>(ale_show_completion_menu) * <Nop>
v  <Plug>(ale_show_completion_menu) * <Nop>
n  <Plug>(ale_show_completion_menu) * :call ale#completion#RestoreCompletionOptions()<CR>
o  <Plug>(coc-funcobj-a) * :<C-U>call coc#rpc#request('selectFunction', [v:false, ''])<CR>
o  <Plug>(coc-funcobj-i) * :<C-U>call coc#rpc#request('selectFunction', [v:true, ''])<CR>
v  <Plug>(coc-funcobj-a) * :<C-U>call coc#rpc#request('selectFunction', [v:false, visualmode()])<CR>
v  <Plug>(coc-funcobj-i) * :<C-U>call coc#rpc#request('selectFunction', [v:true, visualmode()])<CR>
n  <Plug>(coc-cursors-position) * :<C-U>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'position', 'n'])<CR>
n  <Plug>(coc-cursors-word) * :<C-U>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'word', 'n'])<CR>
v  <Plug>(coc-cursors-range) * :<C-U>call coc#rpc#request('cursorsSelect', [bufnr('%'), 'range', visualmode()])<CR>
n  <Plug>(coc-cursors-operator) * :<C-U>set operatorfunc=<SNR>77_CursorRangeFromSelected<CR>g@
n  <Plug>(coc-refactor) * :<C-U>call       CocActionAsync('refactor')<CR>
n  <Plug>(coc-command-repeat) * :<C-U>call       CocAction('repeatCommand')<CR>
n  <Plug>(coc-float-jump) * :<C-U>call       coc#util#float_jump()<CR>
n  <Plug>(coc-float-hide) * :<C-U>call       coc#util#float_hide()<CR>
n  <Plug>(coc-fix-current) * :<C-U>call       CocActionAsync('doQuickfix')<CR>
n  <Plug>(coc-openlink) * :<C-U>call       CocActionAsync('openLink')<CR>
n  <Plug>(coc-references) * :<C-U>call       CocAction('jumpReferences')<CR>
n  <Plug>(coc-type-definition) * :<C-U>call       CocAction('jumpTypeDefinition')<CR>
n  <Plug>(coc-implementation) * :<C-U>call       CocAction('jumpImplementation')<CR>
n  <Plug>(coc-declaration) * :<C-U>call       CocAction('jumpDeclaration')<CR>
n  <Plug>(coc-definition) * :<C-U>call       CocAction('jumpDefinition')<CR>
n  <Plug>(coc-diagnostic-prev-error) * :<C-U>call       CocActionAsync('diagnosticPrevious', 'error')<CR>
n  <Plug>(coc-diagnostic-next-error) * :<C-U>call       CocActionAsync('diagnosticNext',     'error')<CR>
n  <Plug>(coc-diagnostic-prev) * :<C-U>call       CocActionAsync('diagnosticPrevious')<CR>
n  <Plug>(coc-diagnostic-next) * :<C-U>call       CocActionAsync('diagnosticNext')<CR>
n  <Plug>(coc-diagnostic-info) * :<C-U>call       CocActionAsync('diagnosticInfo')<CR>
n  <Plug>(coc-format) * :<C-U>call       CocActionAsync('format')<CR>
n  <Plug>(coc-format-selected) * :<C-U>set        operatorfunc=<SNR>77_FormatFromSelected<CR>g@
n  <Plug>(coc-rename) * :<C-U>call       CocActionAsync('rename')<CR>
n  <Plug>(coc-codeaction) * :<C-U>call       CocActionAsync('codeAction',         '')<CR>
n  <Plug>(coc-codeaction-selected) * :<C-U>set        operatorfunc=<SNR>77_CodeActionFromSelected<CR>g@
v  <Plug>(coc-codeaction-selected) * :<C-U>call       CocActionAsync('codeAction',         visualmode())<CR>
v  <Plug>(coc-format-selected) * :<C-U>call       CocActionAsync('formatSelected',     visualmode())<CR>
n  <Plug>(coc-codelens-action) * :<C-U>call       CocActionAsync('codeLensAction')<CR>
n  <Plug>(coc-range-select) * :<C-U>call       CocAction('rangeSelect',     '', v:true)<CR>
v  <Plug>(coc-range-select-backward) * :<C-U>call       CocAction('rangeSelect',     visualmode(), v:false)<CR>
v  <Plug>(coc-range-select) * :<C-U>call       CocAction('rangeSelect',     visualmode(), v:true)<CR>
x  <Plug>(expand_region_shrink) * :<C-U>call expand_region#next('v', '-')<CR>
x  <Plug>(expand_region_expand) * :<C-U>call expand_region#next('v', '+')<CR>
n  <Plug>(expand_region_expand) * :<C-U>call expand_region#next('n', '+')<CR>
x  <M-s>       * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  <M-s>       * :call multiple_cursors#select_all("n", 1)<CR>
o  <Plug>(textobj-indent-i) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-i","-","o")<CR>
v  <Plug>(textobj-indent-i) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-i","-","v")<CR>
o  <Plug>(textobj-indent-a) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-a","-","o")<CR>
v  <Plug>(textobj-indent-a) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-a","-","v")<CR>
o  <Plug>(textobj-indent-same-i) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-i","same","o")<CR>
v  <Plug>(textobj-indent-same-i) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-i","same","v")<CR>
o  <Plug>(textobj-indent-same-a) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-a","same","o")<CR>
v  <Plug>(textobj-indent-same-a) & <SNR>71_(save-cursor-pos):<C-U>call g:__textobj_indent.do_by_function("select-a","same","v")<CR>
n  <SNR>71_    * <SNR>71_
   <SNR>71_(save-cursor-pos) * <SNR>71_save_cursor_pos()
n  <Plug>(startify-open-buffers) * :<C-U>call startify#open_buffers()<CR>
n  <Plug>GitGutterPreviewHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterPreviewHunk to <Plug>(GitGutterPreviewHunk)')<CR>
n  <Plug>(GitGutterPreviewHunk) * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterUndoHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterUndoHunk to <Plug>(GitGutterUndoHunk)')<CR>
n  <Plug>(GitGutterUndoHunk) * :GitGutterUndoHunk<CR>
n  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
n  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
x  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
x  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterPrevHunk to \<Plug>(GitGutterPrevHunk)')\<CR>"
n  <Plug>(GitGutterPrevHunk) * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterNextHunk to \<Plug>(GitGutterNextHunk)')\<CR>"
n  <Plug>(GitGutterNextHunk) * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>(GitGutterTextObjectOuterVisual) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
x  <Plug>(GitGutterTextObjectInnerVisual) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
o  <Plug>(GitGutterTextObjectOuterPending) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
o  <Plug>(GitGutterTextObjectInnerPending) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
n  <Plug>(EasyAlignOperator) * :set opfunc=<SNR>30_easy_align_op<CR>g@
v  <Plug>(EasyAlignRepeat) * :<C-U>call <SNR>30_repeat_in_visual()<CR>
n  <Plug>(EasyAlignRepeat) * :call <SNR>30_easy_align_repeat()<CR>
v  <Plug>(LiveEasyAlign) * :<C-U>call <SNR>30_live_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(LiveEasyAlign) * :set opfunc=<SNR>30_live_easy_align_op<CR>g@
v  <Plug>(EasyAlign) * :<C-U>call <SNR>30_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(EasyAlign) * :set opfunc=<SNR>30_easy_align_op<CR>g@
x  <M-P>         <Plug>yankstack_substitute_newer_paste
n  <M-P>         <Plug>yankstack_substitute_newer_paste
x  <M-p>         <Plug>yankstack_substitute_older_paste
n  <M-p>         <Plug>yankstack_substitute_older_paste
x  <Plug>yankstack_after_paste * :<C-U>call <SNR>27_after_paste()<CR>
n  <Plug>yankstack_after_paste * :call <SNR>27_after_paste()<CR>
x  <Plug>yankstack_substitute_newer_paste * :<C-U>call <SNR>27_substitute_paste(-v:count1, 'v')<CR>
x  <Plug>yankstack_substitute_older_paste * :<C-U>call <SNR>27_substitute_paste(v:count1, 'v')<CR>
n  <Plug>yankstack_substitute_newer_paste * :<C-U>call <SNR>27_substitute_paste(-v:count1, 'n')<CR>
n  <Plug>yankstack_substitute_older_paste * :<C-U>call <SNR>27_substitute_paste(v:count1, 'n')<CR>
n  <Plug>SpeedDatingFallbackDown * <C-X>
n  <Plug>SpeedDatingFallbackUp * <C-A>
n  <Plug>SpeedDatingNowUTC * :<C-U>call speeddating#timestamp(1,v:count)<CR>
n  <Plug>SpeedDatingNowLocal * :<C-U>call speeddating#timestamp(0,v:count)<CR>
x  <Plug>SpeedDatingDown * :<C-U>call speeddating#incrementvisual(-v:count1)<CR>
x  <Plug>SpeedDatingUp * :<C-U>call speeddating#incrementvisual(v:count1)<CR>
n  <Plug>SpeedDatingDown * :<C-U>call speeddating#increment(-v:count1)<CR>
n  <Plug>SpeedDatingUp * :<C-U>call speeddating#increment(v:count1)<CR>
n  <Plug>unimpaired_line_xml_decode * <SNR>23_TransformSetup("xml_decode")."_"
x  <Plug>unimpaired_xml_decode * <SNR>23_TransformSetup("xml_decode")
n  <Plug>unimpaired_xml_decode * <SNR>23_TransformSetup("xml_decode")
n  <Plug>unimpaired_line_xml_encode * <SNR>23_TransformSetup("xml_encode")."_"
x  <Plug>unimpaired_xml_encode * <SNR>23_TransformSetup("xml_encode")
n  <Plug>unimpaired_xml_encode * <SNR>23_TransformSetup("xml_encode")
n  <Plug>unimpaired_line_url_decode * <SNR>23_TransformSetup("url_decode")."_"
x  <Plug>unimpaired_url_decode * <SNR>23_TransformSetup("url_decode")
n  <Plug>unimpaired_url_decode * <SNR>23_TransformSetup("url_decode")
n  <Plug>unimpaired_line_url_encode * <SNR>23_TransformSetup("url_encode")."_"
x  <Plug>unimpaired_url_encode * <SNR>23_TransformSetup("url_encode")
n  <Plug>unimpaired_url_encode * <SNR>23_TransformSetup("url_encode")
n  <Plug>unimpaired_line_string_decode * <SNR>23_TransformSetup("string_decode")."_"
x  <Plug>unimpaired_string_decode * <SNR>23_TransformSetup("string_decode")
n  <Plug>unimpaired_string_decode * <SNR>23_TransformSetup("string_decode")
n  <Plug>unimpaired_line_string_encode * <SNR>23_TransformSetup("string_encode")."_"
x  <Plug>unimpaired_string_encode * <SNR>23_TransformSetup("string_encode")
n  <Plug>unimpaired_string_encode * <SNR>23_TransformSetup("string_encode")
n  <Plug>unimpairedPutBelow * :call <SNR>23_putline(']p', 'Below')<CR>
n  <Plug>unimpairedPutAbove * :call <SNR>23_putline('[p', 'Above')<CR>
n  <Plug>unimpairedPaste * :call <SNR>23_setup_paste()<CR>
   <Plug>unimpairedMoveSelectionDown * :<C-U>call <SNR>23_MoveSelectionDown(v:count1)<CR>
   <Plug>unimpairedMoveSelectionUp * :<C-U>call <SNR>23_MoveSelectionUp(v:count1)<CR>
n  <Plug>unimpairedMoveDown * :<C-U>call <SNR>23_Move('+',v:count1,'Down')<CR>
n  <Plug>unimpairedMoveUp * :<C-U>call <SNR>23_Move('--',v:count1,'Up')<CR>
n  <Plug>unimpairedBlankDown * :<C-U>call <SNR>23_BlankDown(v:count1)<CR>
n  <Plug>unimpairedBlankUp * :<C-U>call <SNR>23_BlankUp(v:count1)<CR>
o  <Plug>unimpairedContextNext * :<C-U>call <SNR>23_ContextMotion(0)<CR>
o  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>23_ContextMotion(1)<CR>
x  <Plug>unimpairedContextNext * :<C-U>exe 'normal! gv'|call <SNR>23_Context(0)<CR>
x  <Plug>unimpairedContextPrevious * :<C-U>exe 'normal! gv'|call <SNR>23_Context(1)<CR>
n  <Plug>unimpairedContextNext * :<C-U>call <SNR>23_Context(0)<CR>
n  <Plug>unimpairedContextPrevious * :<C-U>call <SNR>23_Context(1)<CR>
n  <Plug>unimpairedDirectoryPrevious * :<C-U>edit <C-R>=<SNR>23_fnameescape(fnamemodify(<SNR>23_FileByOffset(-v:count1), ':.'))<CR><CR>
n  <Plug>unimpairedDirectoryNext * :<C-U>edit <C-R>=<SNR>23_fnameescape(fnamemodify(<SNR>23_FileByOffset(v:count1), ':.'))<CR><CR>
n  <Plug>unimpairedTPNext * :<C-U>exe "p".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>unimpairedTPPrevious * :<C-U>exe "p".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>unimpairedTLast * :<C-U>exe "".(v:count ? v:count : "")."tlast"<CR>
n  <Plug>unimpairedTFirst * :<C-U>exe "".(v:count ? v:count : "")."tfirst"<CR>
n  <Plug>unimpairedTNext * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>unimpairedTPrevious * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>unimpairedQNFile * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv
n  <Plug>unimpairedQPFile * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv
n  <Plug>unimpairedQLast * :<C-U>exe "".(v:count ? v:count : "")."clast"<CR>zv
n  <Plug>unimpairedQFirst * :<C-U>exe "".(v:count ? v:count : "")."cfirst"<CR>zv
n  <Plug>unimpairedQNext * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv
n  <Plug>unimpairedQPrevious * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv
n  <Plug>unimpairedLNFile * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv
n  <Plug>unimpairedLPFile * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv
n  <Plug>unimpairedLLast * :<C-U>exe "".(v:count ? v:count : "")."llast"<CR>zv
n  <Plug>unimpairedLFirst * :<C-U>exe "".(v:count ? v:count : "")."lfirst"<CR>zv
n  <Plug>unimpairedLNext * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv
n  <Plug>unimpairedLPrevious * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv
n  <Plug>unimpairedBLast * :<C-U>exe "".(v:count ? v:count : "")."blast"<CR>
n  <Plug>unimpairedBFirst * :<C-U>exe "".(v:count ? v:count : "")."bfirst"<CR>
n  <Plug>unimpairedBNext * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>
n  <Plug>unimpairedBPrevious * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>
n  <Plug>unimpairedALast * :<C-U>exe "".(v:count ? v:count : "")."last"<CR>
n  <Plug>unimpairedAFirst * :<C-U>exe "".(v:count ? v:count : "")."first"<CR>
n  <Plug>unimpairedANext * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>
n  <Plug>unimpairedAPrevious * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>
n  <Plug>(abolish-coerce-word) * <SNR>22_coerce(nr2char(getchar())).'iw'
n  <Plug>(abolish-coerce) * <SNR>22_coerce(nr2char(getchar()))
n  <Plug>CommentaryUndo   :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>
n  <Plug>ChangeCommentary * c:<C-U>call <SNR>21_textobject(1)<CR>
o  <Plug>Commentary * :<C-U>call <SNR>21_textobject(get(v:, 'operator', '') ==# 'c')<CR>
n  <Plug>CommentaryLine * <SNR>21_go() . '_'
n  <Plug>Commentary * <SNR>21_go()
x  <Plug>Commentary * <SNR>21_go()
v  <Plug>VgSurround * :<C-U>call <SNR>19_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>19_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * <SNR>19_opfunc2('setup')
n  <Plug>Ysurround * <SNR>19_opfunc('setup')
n  <Plug>YSsurround * <SNR>19_opfunc2('setup').'_'
n  <Plug>Yssurround * '^'.v:count1.<SNR>19_opfunc('setup').'g_'
n  <Plug>CSurround * :<C-U>call <SNR>19_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>19_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>19_dosurround(<SNR>19_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
v  <M-k>         :m'<-2<CR>`>my`<mzgv`yo`z
v  <M-j>         :m'>+<CR>`<my`>mzgv`yo`z
n  <M-k>         mz:m-2<CR>`z
n  <M-j>         mz:m+<CR>`z
   <S-Space>     /

i  <Plug>(ale_complete) * <C-\><C-O>:ALEComplete<CR>
c  <Plug>(ale_show_completion_menu) * <Nop>
i  <Plug>(ale_show_completion_menu) * <C-X><C-O>
i  <Plug>CocRefresh * <C-R>=coc#_complete()<CR>
i  <M-P>         <Plug>yankstack_substitute_newer_paste
i  <M-p>         <Plug>yankstack_substitute_older_paste
i  <Plug>yankstack_after_paste * <C-O>:call <SNR>27_after_paste()<CR>
i  <Plug>yankstack_substitute_newer_paste * <C-R>=<SNR>27_substitute_paste(-v:count1, 'i')<CR>
i  <Plug>yankstack_substitute_older_paste * <C-R>=<SNR>27_substitute_paste(v:count1, 'i')<CR>
i  <Plug>AlwaysEnd & <SNR>24_AlwaysEnd
i  <Plug>DiscretionaryEnd & <SNR>24_DiscretionaryEnd
i  <SNR>24_AlwaysEnd * <C-R>=<SNR>24_crend(1)<CR>
i  <SNR>24_DiscretionaryEnd * <C-R>=<SNR>24_crend(0)<CR>
i  <Plug>ISurround * <C-R>=<SNR>19_insert(1)<CR>
i  <Plug>Isurround * <C-R>=<SNR>19_insert()<CR>
i  <C-Space>   * coc#refresh()
i  <S-Tab>     * pumvisible() ? "\<C-P>" : "\<C-H>"
i  <C-G>S        <Plug>ISurround
i  <C-G>s        <Plug>Isurround
i  <Tab>       * pumvisible() ? "\<C-N>" : <SNR>10_check_back_space() ? "\<Tab>" : coc#refresh()
i  <CR>        & complete_info()["selected"] != "-1" ? "\<C-Y>" : "\<C-G>u\<CR>"<SNR>24_DiscretionaryEnd
c  <C-R><C-G>  & fnameescape(fugitive#Object(@%))
i  <C-S>         <Plug>Isurround
i  <C-X><CR>   & complete_info()["selected"] != "-1" ? "\<C-Y>" : "\<C-G>u\<CR>"<SNR>24_AlwaysEnd

E475: Invalid argument: EMD

