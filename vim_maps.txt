

n  <NL>        *@:call nerdtree#ui_glue#invokeKeyMap("<C-j>")<CR>
n  <C-K>       *@:call nerdtree#ui_glue#invokeKeyMap("<C-k>")<CR>
n  <CR>        *@:call nerdtree#ui_glue#invokeKeyMap("<CR>")<CR>
n  ,hp          @<Plug>(GitGutterPreviewHunk)
n  ,hu          @<Plug>(GitGutterUndoHunk)
n  ,hs          @<Plug>(GitGutterStageHunk)
x  ,hs          @<Plug>(GitGutterStageHunk)
n  ?           *@:call nerdtree#ui_glue#invokeKeyMap("?")<CR>
n  A           *@:call nerdtree#ui_glue#invokeKeyMap("A")<CR>
n  B           *@:call nerdtree#ui_glue#invokeKeyMap("B")<CR>
n  C           *@:call nerdtree#ui_glue#invokeKeyMap("C")<CR>
n  CD          *@:call nerdtree#ui_glue#invokeKeyMap("CD")<CR>
n  D           *@:call nerdtree#ui_glue#invokeKeyMap("D")<CR>
n  F           *@:call nerdtree#ui_glue#invokeKeyMap("F")<CR>
n  I           *@:call nerdtree#ui_glue#invokeKeyMap("I")<CR>
n  J           *@:call nerdtree#ui_glue#invokeKeyMap("J")<CR>
n  K           *@:call nerdtree#ui_glue#invokeKeyMap("K")<CR>
n  O           *@:call nerdtree#ui_glue#invokeKeyMap("O")<CR>
n  P           *@:call nerdtree#ui_glue#invokeKeyMap("P")<CR>
n  R           *@:call nerdtree#ui_glue#invokeKeyMap("R")<CR>
n  T           *@:call nerdtree#ui_glue#invokeKeyMap("T")<CR>
n  U           *@:call nerdtree#ui_glue#invokeKeyMap("U")<CR>
n  X           *@:call nerdtree#ui_glue#invokeKeyMap("X")<CR>
n  [c           @<Plug>(GitGutterPrevHunk)
n  ]c           @<Plug>(GitGutterNextHunk)
x  ac           @<Plug>(GitGutterTextObjectOuterVisual)
o  ac           @<Plug>(GitGutterTextObjectOuterPending)
n  cd          *@:call nerdtree#ui_glue#invokeKeyMap("cd")<CR>
n  e           *@:call nerdtree#ui_glue#invokeKeyMap("e")<CR>
n  f           *@:call nerdtree#ui_glue#invokeKeyMap("f")<CR>
n  go          *@:call nerdtree#ui_glue#invokeKeyMap("go")<CR>
n  gs          *@:call nerdtree#ui_glue#invokeKeyMap("gs")<CR>
n  gi          *@:call nerdtree#ui_glue#invokeKeyMap("gi")<CR>
x  ic           @<Plug>(GitGutterTextObjectInnerVisual)
o  ic           @<Plug>(GitGutterTextObjectInnerPending)
n  i           *@:call nerdtree#ui_glue#invokeKeyMap("i")<CR>
n  m           *@:call nerdtree#ui_glue#invokeKeyMap("m")<CR>
n  o           *@:call nerdtree#ui_glue#invokeKeyMap("o")<CR>
n  p           *@:call nerdtree#ui_glue#invokeKeyMap("p")<CR>
n  q           *@:call nerdtree#ui_glue#invokeKeyMap("q")<CR>
n  r           *@:call nerdtree#ui_glue#invokeKeyMap("r")<CR>
n  s           *@:call nerdtree#ui_glue#invokeKeyMap("s")<CR>
n  t           *@:call nerdtree#ui_glue#invokeKeyMap("t")<CR>
n  u           *@:call nerdtree#ui_glue#invokeKeyMap("u")<CR>
n  x           *@:call nerdtree#ui_glue#invokeKeyMap("x")<CR>
n  <MiddleMouse> *@:call nerdtree#ui_glue#invokeKeyMap("<MiddleMouse>")<CR>
n  <2-LeftMouse> *@:call nerdtree#ui_glue#invokeKeyMap("<2-LeftMouse>")<CR>
n  <LeftRelease> *@<LeftRelease>:call nerdtree#ui_glue#invokeKeyMap("<LeftRelease>")<CR>
   <C-B>         :CtrlPBuffer<CR>
   <C-F>         <Plug>(ctrlp)
   <C-H>         <C-W>h
x  <Tab>         <Plug>snipMateVisual
s  <Tab>         <Plug>snipMateNextOrTrigger
s  <NL>        * <Esc>i<Right><C-R>=snipMate#TriggerSnippet()<CR>
nox<NL>          <C-W>j
   <C-K>         <C-W>k
   <C-L>         <C-W>l
n  <C-N>         <Plug>yankstack_substitute_newer_paste
n  <C-P>         <Plug>yankstack_substitute_older_paste
x  <C-S>       * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  <C-S>       * :call multiple_cursors#new("n", 1)<CR>
n  <C-W><C-F>  * :call GotoFile("new")<CR>
n  <C-W>f      * :call GotoFile("new")<CR>
v  <C-Y>c        <Plug>(emmet-code-pretty)
n  <C-Y>m        <Plug>(emmet-merge-lines)
n  <C-Y>A        <Plug>(emmet-anchorize-summary)
n  <C-Y>a        <Plug>(emmet-anchorize-url)
n  <C-Y>k        <Plug>(emmet-remove-tag)
n  <C-Y>j        <Plug>(emmet-split-join-tag)
n  <C-Y>/        <Plug>(emmet-toggle-comment)
n  <C-Y>I        <Plug>(emmet-image-encode)
n  <C-Y>i        <Plug>(emmet-image-size)
n  <C-Y>N        <Plug>(emmet-move-prev)
n  <C-Y>n        <Plug>(emmet-move-next)
v  <C-Y>D        <Plug>(emmet-balance-tag-outword)
n  <C-Y>D        <Plug>(emmet-balance-tag-outword)
v  <C-Y>d        <Plug>(emmet-balance-tag-inward)
n  <C-Y>d        <Plug>(emmet-balance-tag-inward)
n  <C-Y>u        <Plug>(emmet-update-tag)
n  <C-Y>;        <Plug>(emmet-expand-word)
v  <C-Y>,        <Plug>(emmet-expand-abbr)
n  <C-Y>,        <Plug>(emmet-expand-abbr)
   <Space>       /
v  #           * :<C-U>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>
v  $e          * <Esc>`>a"<Esc>`<i"<Esc>
v  $q          * <Esc>`>a'<Esc>`<i'<Esc>
v  $$          * <Esc>`>a"<Esc>`<i"<Esc>
v  $3          * <Esc>`>a}<Esc>`<i{<Esc>
v  $2          * <Esc>`>a]<Esc>`<i[<Esc>
v  $1          * <Esc>`>a)<Esc>`<i(<Esc>
o  %             <Plug>(MatchitOperationForward)
x  %             <Plug>(MatchitVisualForward)
n  %             <Plug>(MatchitNormalForward)
v  *           * :<C-U>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
v  +             <Plug>(expand_region_expand)
n  +             <Plug>(expand_region_expand)
n  ,bv         & :BufExplorerVerticalSplit<CR>
n  ,bs         & :BufExplorerHorizontalSplit<CR>
n  ,bt         & :ToggleBufExplorer<CR>
   ,p            :cp<CR>
   ,n            :cn<CR>
   ,co           ggVGy:tabnew<CR>:set syntax=qf<CR>pgg
   ,cc           :botright cope<CR>
v  ,r          * :call VisualSelection('replace', '')<CR>
   ,g            :Ack<Space>
n  ,d          * :GitGutterToggle<CR>
n  ,a            <Plug>(ale_next_wrap)
n  ,z          * :Goyo<CR>
   ,nf           :NERDTreeFind<CR>
   ,nb           :NERDTreeFromBookmark<Space>
   ,nn           :NERDTreeToggle<CR>
   ,j            :CtrlP<CR>
   ,f            :MRU<CR>
   ,o            :BufExplorer<CR>
   ,pp           :setlocal paste!<CR>
   ,x            :e ~/buffer.md<CR>
   ,q            :e ~/buffer<CR>
   ,m          * mmHmt:%s/<C-V><CR>//ge<CR>'tzt'm
   ,s?           z=
   ,sa           zg
   ,sp           [s
   ,sn           ]s
   ,ss           :setlocal spell!<CR>
   ,cd           :cd %:p:h<CR>:pwd<CR>
   ,te           :tabedit <C-R>=expand("%:p:h")<CR>/
n  ,tl           :exe "tabn ".g:lasttab<CR>
   ,t,           :tabnext<Space>
   ,tm           :tabmove<Space>
   ,tc           :tabclose<CR>
   ,to           :tabonly<CR>
   ,tn           :tabnew<CR>
   ,h            :bprevious<CR>
   ,l            :bnext<CR>
   ,ba           :bufdo bd<CR>
   ,bd           :Bclose<CR>:tabclose<CR>gT
   ,<CR>         :noh<CR>
s  0             <SNR>37_yank_with_key("0")
nox0             ^
s  1             <SNR>37_yank_with_key("1")
s  2             <SNR>37_yank_with_key("2")
s  3             <SNR>37_yank_with_key("3")
s  4             <SNR>37_yank_with_key("4")
s  5             <SNR>37_yank_with_key("5")
s  6             <SNR>37_yank_with_key("6")
s  7             <SNR>37_yank_with_key("7")
s  8             <SNR>37_yank_with_key("8")
s  9             <SNR>37_yank_with_key("9")
x  P           * :<C-U>call <SNR>37_paste_with_key("P", "v", v:register, v:count1)<CR>
n  P           * :<C-U>call <SNR>37_paste_with_key("P", "n", v:register, v:count1)<CR>
x  S             <Plug>VSurround
v  Si            S(i_<Esc>f)
o  [%            <Plug>(MatchitOperationMultiBackward)
x  [%            <Plug>(MatchitVisualMultiBackward)
n  [%            <Plug>(MatchitNormalMultiBackward)
o  ]%            <Plug>(MatchitOperationMultiForward)
x  ]%            <Plug>(MatchitVisualMultiForward)
n  ]%            <Plug>(MatchitNormalMultiForward)
n  _             <Plug>(expand_region_shrink)
v  _             <Plug>(expand_region_shrink)
x  a%            <Plug>(MatchitVisualTextObject)
v  aI          * :<C-U>cal <SNR>65_HandleTextObjectMapping(0, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  aI          * :<C-U>cal <SNR>65_HandleTextObjectMapping(0, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
v  ai          * :<C-U>cal <SNR>65_HandleTextObjectMapping(0, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  ai          * :<C-U>cal <SNR>65_HandleTextObjectMapping(0, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
s  a             <SNR>37_yank_with_key("a")
s  b             <SNR>37_yank_with_key("b")
n  cr            <Plug>(abolish-coerce-word)
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
s  c             <SNR>37_yank_with_key("c")
n  ds            <Plug>Dsurround
s  d             <SNR>37_yank_with_key("d")
x  d           * <SNR>37_yank_with_key("d")
n  d           * <SNR>37_yank_with_key("d")
s  e             <SNR>37_yank_with_key("e")
s  f             <SNR>37_yank_with_key("f")
v  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
o  g%            <Plug>(MatchitOperationBackward)
x  g%            <Plug>(MatchitVisualBackward)
n  g%            <Plug>(MatchitNormalBackward)
n  gcu           <Plug>Commentary<Plug>Commentary
n  gcc           <Plug>CommentaryLine
o  gc            <Plug>Commentary
n  gc            <Plug>Commentary
x  gc            <Plug>Commentary
x  g<M-s>      * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  g<M-s>      * :call multiple_cursors#select_all("n", 0)<CR>
x  g<C-S>      * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  g<C-S>      * :call multiple_cursors#new("n", 0)<CR>
x  gS            <Plug>VgSurround
n  gf          * :call GotoFile("")<CR>
s  g             <SNR>37_yank_with_key("g")
x  gP          * :<C-U>call <SNR>37_paste_with_key("gP", "v", v:register, v:count1)<CR>
n  gP          * :<C-U>call <SNR>37_paste_with_key("gP", "n", v:register, v:count1)<CR>
x  gp          * :<C-U>call <SNR>37_paste_with_key("gp", "v", v:register, v:count1)<CR>
n  gp          * :<C-U>call <SNR>37_paste_with_key("gp", "n", v:register, v:count1)<CR>
v  gv          * :call VisualSelection('gv', '')<CR>
s  h             <SNR>37_yank_with_key("h")
v  iI          * :<C-U>cal <SNR>65_HandleTextObjectMapping(1, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  iI          * :<C-U>cal <SNR>65_HandleTextObjectMapping(1, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
v  ii          * :<C-U>cal <SNR>65_HandleTextObjectMapping(1, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  ii          * :<C-U>cal <SNR>65_HandleTextObjectMapping(1, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
s  i             <SNR>37_yank_with_key("i")
s  j             <SNR>37_yank_with_key("j")
s  k             <SNR>37_yank_with_key("k")
s  l             <SNR>37_yank_with_key("l")
s  m             <SNR>37_yank_with_key("m")
s  n             <SNR>37_yank_with_key("n")
s  o             <SNR>37_yank_with_key("o")
s  p             <SNR>37_yank_with_key("p")
x  p           * :<C-U>call <SNR>37_paste_with_key("p", "v", v:register, v:count1)<CR>
n  p           * :<C-U>call <SNR>37_paste_with_key("p", "n", v:register, v:count1)<CR>
s  q             <SNR>37_yank_with_key("q")
s  r             <SNR>37_yank_with_key("r")
s  s             <SNR>37_yank_with_key("s")
s  t             <SNR>37_yank_with_key("t")
s  u             <SNR>37_yank_with_key("u")
s  v             <SNR>37_yank_with_key("v")
s  w             <SNR>37_yank_with_key("w")
s  x             <SNR>37_yank_with_key("x")
n  y<C-G>      & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
s  y             <SNR>37_yank_with_key("y")
x  y           * <SNR>37_yank_with_key("y")
n  y           * <SNR>37_yank_with_key("y")
s  z             <SNR>37_yank_with_key("z")
   <Plug>AirlineSelectNextTab * :<C-U>call <SNR>131_jump_to_tab(v:count1)<CR>
   <Plug>AirlineSelectPrevTab * :<C-U>call <SNR>131_jump_to_tab(-v:count1)<CR>
   <Plug>AirlineSelectTab9 * :call <SNR>131_select_tab(8)<CR>
   <Plug>AirlineSelectTab8 * :call <SNR>131_select_tab(7)<CR>
   <Plug>AirlineSelectTab7 * :call <SNR>131_select_tab(6)<CR>
   <Plug>AirlineSelectTab6 * :call <SNR>131_select_tab(5)<CR>
   <Plug>AirlineSelectTab5 * :call <SNR>131_select_tab(4)<CR>
   <Plug>AirlineSelectTab4 * :call <SNR>131_select_tab(3)<CR>
   <Plug>AirlineSelectTab3 * :call <SNR>131_select_tab(2)<CR>
   <Plug>AirlineSelectTab2 * :call <SNR>131_select_tab(1)<CR>
   <Plug>AirlineSelectTab1 * :call <SNR>131_select_tab(0)<CR>
s  <S-Tab>       <Plug>snipMateBack
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())<CR>
v  <Plug>(MatchitVisualTextObject)   <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
o  <Plug>(MatchitOperationMultiForward) * :<C-U>call matchit#MultiMatch("W",  "o")<CR>
o  <Plug>(MatchitOperationMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "o")<CR>
v  <Plug>(MatchitVisualMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
v  <Plug>(MatchitVisualMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
n  <Plug>(MatchitNormalMultiForward) * :<C-U>call matchit#MultiMatch("W",  "n")<CR>
n  <Plug>(MatchitNormalMultiBackward) * :<C-U>call matchit#MultiMatch("bW", "n")<CR>
o  <Plug>(MatchitOperationBackward) * :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
o  <Plug>(MatchitOperationForward) * :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
v  <Plug>(MatchitVisualBackward) * :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
v  <Plug>(MatchitVisualForward) * :<C-U>call matchit#Match_wrapper('',1,'v')<CR>m'gv``
n  <Plug>(MatchitNormalBackward) * :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
n  <Plug>(MatchitNormalForward) * :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
v  <Plug>(emmet-code-pretty) * :call emmet#codePretty()<CR>
n  <Plug>(emmet-merge-lines) * :call emmet#mergeLines()<CR>
n  <Plug>(emmet-anchorize-summary) * :call emmet#anchorizeURL(1)<CR>
n  <Plug>(emmet-anchorize-url) * :call emmet#anchorizeURL(0)<CR>
n  <Plug>(emmet-remove-tag) * :call emmet#removeTag()<CR>
n  <Plug>(emmet-split-join-tag) * :call emmet#splitJoinTag()<CR>
n  <Plug>(emmet-toggle-comment) * :call emmet#toggleComment()<CR>
n  <Plug>(emmet-image-encode) * :call emmet#imageEncode()<CR>
n  <Plug>(emmet-image-size) * :call emmet#imageSize()<CR>
n  <Plug>(emmet-move-prev-item) * :call emmet#moveNextPrevItem(1)<CR>
n  <Plug>(emmet-move-next-item) * :call emmet#moveNextPrevItem(0)<CR>
n  <Plug>(emmet-move-prev) * :call emmet#moveNextPrev(1)<CR>
n  <Plug>(emmet-move-next) * :call emmet#moveNextPrev(0)<CR>
v  <Plug>(emmet-balance-tag-outword) * <Esc>:call emmet#balanceTag(-1)<CR>
n  <Plug>(emmet-balance-tag-outword) * :call emmet#balanceTag(-1)<CR>
v  <Plug>(emmet-balance-tag-inward) * <Esc>:call emmet#balanceTag(1)<CR>
n  <Plug>(emmet-balance-tag-inward) * :call emmet#balanceTag(1)<CR>
n  <Plug>(emmet-update-tag) * :call emmet#updateTag()<CR>
n  <Plug>(emmet-expand-word) * :call emmet#expandAbbr(1,"")<CR>
v  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(2,"")<CR>
n  <Plug>(emmet-expand-abbr) * :call emmet#expandAbbr(3,"")<CR>
n  <Plug>(abolish-coerce-word) * <SNR>80_coerce(nr2char(getchar())).'iw'
n  <Plug>(abolish-coerce) * <SNR>80_coerce(nr2char(getchar()))
n  <Plug>GitGutterPreviewHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterPreviewHunk to <Plug>(GitGutterPreviewHunk)')<CR>
n  <Plug>(GitGutterPreviewHunk) * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterUndoHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterUndoHunk to <Plug>(GitGutterUndoHunk)')<CR>
n  <Plug>(GitGutterUndoHunk) * :GitGutterUndoHunk<CR>
n  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
n  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
x  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
x  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterPrevHunk to \<Plug>(GitGutterPrevHunk)')\<CR>"
n  <Plug>(GitGutterPrevHunk) * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>call gitgutter#utility#warn('please change your map \<Plug>GitGutterNextHunk to \<Plug>(GitGutterNextHunk)')\<CR>"
n  <Plug>(GitGutterNextHunk) * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>(GitGutterTextObjectOuterVisual) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
x  <Plug>(GitGutterTextObjectInnerVisual) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
o  <Plug>(GitGutterTextObjectOuterPending) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
o  <Plug>(GitGutterTextObjectInnerPending) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
n  <Plug>CommentaryUndo   :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>
n  <Plug>ChangeCommentary * c:<C-U>call <SNR>76_textobject(1)<CR>
o  <Plug>Commentary * :<C-U>call <SNR>76_textobject(get(v:, 'operator', '') ==# 'c')<CR>
n  <Plug>CommentaryLine * <SNR>76_go() . '_'
n  <Plug>Commentary * <SNR>76_go()
x  <Plug>Commentary * <SNR>76_go()
x  <Plug>(expand_region_shrink) * :<C-U>call expand_region#next('v', '-')<CR>
x  <Plug>(expand_region_expand) * :<C-U>call expand_region#next('v', '+')<CR>
n  <Plug>(expand_region_expand) * :<C-U>call expand_region#next('n', '+')<CR>
x  <M-s>       * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  <M-s>       * :call multiple_cursors#select_all("n", 1)<CR>
v  <Plug>VgSurround * :<C-U>call <SNR>69_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>69_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * <SNR>69_opfunc2('setup')
n  <Plug>Ysurround * <SNR>69_opfunc('setup')
n  <Plug>YSsurround * <SNR>69_opfunc2('setup').'_'
n  <Plug>Yssurround * '^'.v:count1.<SNR>69_opfunc('setup').'g_'
n  <Plug>CSurround * :<C-U>call <SNR>69_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>69_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>69_dosurround(<SNR>69_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
x  <Plug>snipMateVisual * :<C-U>call <SNR>66_grab_visual()<CR>gv"_c
s  <Plug>snipMateBack * <Esc>a<C-R>=snipMate#BackwardsSnippet()<CR>
s  <Plug>snipMateNextOrTrigger * <Esc>a<C-R>=snipMate#TriggerSnippet()<CR>
n  <Plug>(ctrlp) * :<C-U>CtrlP<CR>
x  <M-P>         <Plug>yankstack_substitute_newer_paste
n  <M-P>         <Plug>yankstack_substitute_newer_paste
x  <M-p>         <Plug>yankstack_substitute_older_paste
n  <M-p>         <Plug>yankstack_substitute_older_paste
x  <Plug>yankstack_after_paste * :<C-U>call <SNR>37_after_paste()<CR>
n  <Plug>yankstack_after_paste * :call <SNR>37_after_paste()<CR>
x  <Plug>yankstack_substitute_newer_paste * :<C-U>call <SNR>37_substitute_paste(-v:count1, 'v')<CR>
x  <Plug>yankstack_substitute_older_paste * :<C-U>call <SNR>37_substitute_paste(v:count1, 'v')<CR>
n  <Plug>yankstack_substitute_newer_paste * :<C-U>call <SNR>37_substitute_paste(-v:count1, 'n')<CR>
n  <Plug>yankstack_substitute_older_paste * :<C-U>call <SNR>37_substitute_paste(v:count1, 'n')<CR>
n  <Plug>(ale_rename) * :ALERename<CR>
n  <Plug>(ale_documentation) * :ALEDocumentation<CR>
n  <Plug>(ale_hover) * :ALEHover<CR>
n  <Plug>(ale_find_references) * :ALEFindReferences<CR>
n  <Plug>(ale_go_to_type_definition_in_vsplit) * :ALEGoToTypeDefinitionInVSplit<CR>
n  <Plug>(ale_go_to_type_definition_in_split) * :ALEGoToTypeDefinitionInSplit<CR>
n  <Plug>(ale_go_to_type_definition_in_tab) * :ALEGoToTypeDefinitionInTab<CR>
n  <Plug>(ale_go_to_type_definition) * :ALEGoToTypeDefinition<CR>
n  <Plug>(ale_go_to_definition_in_vsplit) * :ALEGoToDefinitionInVSplit<CR>
n  <Plug>(ale_go_to_definition_in_split) * :ALEGoToDefinitionInSplit<CR>
n  <Plug>(ale_go_to_definition_in_tab) * :ALEGoToDefinitionInTab<CR>
n  <Plug>(ale_go_to_definition) * :ALEGoToDefinition<CR>
n  <Plug>(ale_fix) * :ALEFix<CR>
n  <Plug>(ale_detail) * :ALEDetail<CR>
n  <Plug>(ale_lint) * :ALELint<CR>
n  <Plug>(ale_reset_buffer) * :ALEResetBuffer<CR>
n  <Plug>(ale_disable_buffer) * :ALEDisableBuffer<CR>
n  <Plug>(ale_enable_buffer) * :ALEEnableBuffer<CR>
n  <Plug>(ale_toggle_buffer) * :ALEToggleBuffer<CR>
n  <Plug>(ale_reset) * :ALEReset<CR>
n  <Plug>(ale_disable) * :ALEDisable<CR>
n  <Plug>(ale_enable) * :ALEEnable<CR>
n  <Plug>(ale_toggle) * :ALEToggle<CR>
n  <Plug>(ale_last) * :ALELast<CR>
n  <Plug>(ale_first) * :ALEFirst<CR>
n  <Plug>(ale_next_wrap_warning) * :ALENext -wrap -warning<CR>
n  <Plug>(ale_next_warning) * :ALENext -warning<CR>
n  <Plug>(ale_next_wrap_error) * :ALENext -wrap -error<CR>
n  <Plug>(ale_next_error) * :ALENext -error<CR>
n  <Plug>(ale_next_wrap) * :ALENextWrap<CR>
n  <Plug>(ale_next) * :ALENext<CR>
n  <Plug>(ale_previous_wrap_warning) * :ALEPrevious -wrap -warning<CR>
n  <Plug>(ale_previous_warning) * :ALEPrevious -warning<CR>
n  <Plug>(ale_previous_wrap_error) * :ALEPrevious -wrap -error<CR>
n  <Plug>(ale_previous_error) * :ALEPrevious -error<CR>
n  <Plug>(ale_previous_wrap) * :ALEPreviousWrap<CR>
n  <Plug>(ale_previous) * :ALEPrevious<CR>
o  <Plug>(ale_show_completion_menu) * <Nop>
v  <Plug>(ale_show_completion_menu) * <Nop>
n  <Plug>(ale_show_completion_menu) * :call ale#completion#RestoreCompletionOptions()<CR>
v  <D-k>         <M-k>
v  <D-j>         <M-j>
n  <D-k>         <M-k>
n  <D-j>         <M-j>
v  <M-k>         :m'<-2<CR>`>my`<mzgv`yo`z
v  <M-j>         :m'>+<CR>`<my`>mzgv`yo`z
n  <M-k>         mz:m-2<CR>`z
n  <M-j>         mz:m+<CR>`z
   <C-Space>     ?
   ½             $

i  <BS>        * <SNR>143_OnDeleteChar( "\<BS>" )
i  <C-Space>   * <C-R>=<SNR>143_RequestSemanticCompletion()<CR>
i  <Nul>         <C-Space>
i  <Up>        * pumvisible() ? "\<C-P>" : "\<Up>"
i  <Down>      * pumvisible() ? "\<C-N>" : "\<Down>"
i  <S-Tab>     * pumvisible() ? "\<C-P>" : "\<S-Tab>"
i  <Plug>(emmet-merge-lines) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#mergeLines()<CR>
i  <Plug>(emmet-anchorize-summary) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#anchorizeURL(1)<CR>
i  <Plug>(emmet-anchorize-url) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#anchorizeURL(0)<CR>
i  <Plug>(emmet-remove-tag) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#removeTag()<CR>
i  <Plug>(emmet-split-join-tag) * <Esc>:call emmet#splitJoinTag()<CR>
i  <Plug>(emmet-toggle-comment) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#toggleComment()<CR>
i  <Plug>(emmet-image-encode) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#imageEncode()<CR>
i  <Plug>(emmet-image-size) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#imageSize()<CR>
i  <Plug>(emmet-move-prev-item) * <Esc>:call emmet#moveNextPrevItem(1)<CR>
i  <Plug>(emmet-move-next-item) * <Esc>:call emmet#moveNextPrevItem(0)<CR>
i  <Plug>(emmet-move-prev) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#moveNextPrev(1)<CR>
i  <Plug>(emmet-move-next) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#moveNextPrev(0)<CR>
i  <Plug>(emmet-balance-tag-outword) * <Esc>:call emmet#balanceTag(-1)<CR>
i  <Plug>(emmet-balance-tag-inward) * <Esc>:call emmet#balanceTag(1)<CR>
i  <Plug>(emmet-update-tag) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#updateTag()<CR>
i  <Plug>(emmet-expand-word) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#expandAbbr(1,"")<CR>
i  <Plug>(emmet-expand-abbr) * <C-R>=emmet#util#closePopup()<CR><C-R>=emmet#expandAbbr(0,"")<CR>
i  <Plug>ISurround * <C-R>=<SNR>69_insert(1)<CR>
i  <Plug>Isurround * <C-R>=<SNR>69_insert()<CR>
i  <Plug>snipMateShow * <C-R>=snipMate#ShowAvailableSnips()<CR>
i  <Plug>snipMateBack * <C-R>=snipMate#BackwardsSnippet()<CR>
i  <Plug>snipMateTrigger * <C-R>=snipMate#TriggerSnippet(1)<CR>
i  <Plug>snipMateNextOrTrigger * <C-R>=snipMate#TriggerSnippet()<CR>
i  <M-P>         <Plug>yankstack_substitute_newer_paste
i  <M-p>         <Plug>yankstack_substitute_older_paste
i  <Plug>yankstack_after_paste * <C-O>:call <SNR>37_after_paste()<CR>
i  <Plug>yankstack_substitute_newer_paste * <C-R>=<SNR>37_substitute_paste(-v:count1, 'i')<CR>
i  <Plug>yankstack_substitute_older_paste * <C-R>=<SNR>37_substitute_paste(v:count1, 'i')<CR>
i  <Plug>(ale_complete) * <C-\><C-O>:ALEComplete<CR>
c  <Plug>(ale_show_completion_menu) * <Nop>
i  <Plug>(ale_show_completion_menu) * <C-X><C-O>
i  <Plug>AutoPairsReturn & <SNR>32_AutoPairsReturn
i  <SNR>32_AutoPairsReturn * <C-R>=AutoPairsReturn()<CR>
i  ½             $
c  ½             $
c  <C-A>       * <Home>
c  <C-E>       * <End>
i  <C-G>S        <Plug>ISurround
i  <C-G>s        <Plug>Isurround
i  <C-H>       * <SNR>143_OnDeleteChar( "\<C-H>" )
i  <Tab>       * pumvisible() ? "\<C-N>" : "\<Tab>"
i  <NL>        * <C-R>=snipMate#TriggerSnippet()<CR>
c  <C-K>       * <C-U>
c  <C-N>       * <Down>
c  <C-P>       * <Up>
i  <C-R><Tab>    <Plug>snipMateShow
c  <C-R><C-G>  & fnameescape(fugitive#Object(@%))
i  <C-S>         <Plug>Isurround
i  <C-Y>       * <SNR>143_StopCompletion( "\<C-Y>" )
i  <C-Y>m        <Plug>(emmet-merge-lines)
i  <C-Y>A        <Plug>(emmet-anchorize-summary)
i  <C-Y>a        <Plug>(emmet-anchorize-url)
i  <C-Y>k        <Plug>(emmet-remove-tag)
i  <C-Y>j        <Plug>(emmet-split-join-tag)
i  <C-Y>/        <Plug>(emmet-toggle-comment)
i  <C-Y>I        <Plug>(emmet-image-encode)
i  <C-Y>i        <Plug>(emmet-image-size)
i  <C-Y>N        <Plug>(emmet-move-prev)
i  <C-Y>n        <Plug>(emmet-move-next)
i  <C-Y>D        <Plug>(emmet-balance-tag-outword)
i  <C-Y>d        <Plug>(emmet-balance-tag-inward)
i  <C-Y>u        <Plug>(emmet-update-tag)
i  <C-Y>;        <Plug>(emmet-expand-word)
i  <C-Y>,        <Plug>(emmet-expand-abbr)
i  $e          * ""<Esc>i
i  $q          * ''<Esc>i
i  $4          * {<Esc>o}<Esc>O
i  $3          * {}<Esc>i
i  $2          * []<Esc>i
i  $1          * ()<Esc>i
c  $q          * <C-\>eDeleteTillSlash()<CR>
c  $c          * e <C-\>eCurrentFileDir("e")<CR>
c  $j          * e ./
c  $d          * e ~/Desktop/
c  $h          * e ~/
